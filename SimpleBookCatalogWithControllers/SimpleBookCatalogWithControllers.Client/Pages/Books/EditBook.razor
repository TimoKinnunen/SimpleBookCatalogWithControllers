@page "/edit-book/{id:int}"
@inject IBookService BookService
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

<PageTitle>Edit book</PageTitle>

@if (book is not null)
{
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Enhance="true" FormName="EditBookForm" Model="book" OnValidSubmit="@Update">

                <h3>Edit book @Id</h3>

                <!-- The hidden input field is used to store the Id of the Book object.
                When the form is submitted, the Id is included in the form data,
                ensuring that the correct Id is used when updating the book. -->
                <input type="hidden" name="book.Id" value="@book.Id" />

                <div class="mb-3">
                    <label for="id" class="form-label">
                        Id
                    </label>
                    <p id="id">@book.Id</p>
                </div>

                <div class="mb-3">
                    <label for="title" class="form-label">
                        Title
                    </label>
                    <InputText id="title" class="form-control" @bind-Value="book.Title" />
                </div>

                <div class="mb-3">
                    <label for="author" class="form-label">
                        Author
                    </label>
                    <InputText id="author" class="form-control" @bind-Value="book.Author" />
                </div>
                <div class="mb-3">
                    <label for="publication-date" class="form-label">
                        Date published
                    </label>
                    <InputDate id="publication-date" class="form-control" @bind-Value="book.PublicationDate" />
                </div>
                <div class="mb-3">
                    <label for="category" class="form-label">
                        Category
                    </label>
                    <InputSelect id="category" class="form-control" @bind-Value="book.Category">
                        <option value="0">
                            Select a category
                        </option>
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">
                                @category.ToString()
                            </option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <button class="btn btn-success mb-3">
                        Update
                    </button>

                    <a href="/books" class="btn btn-secondary mb-3">
                        Back to books
                    </a>
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public Book? book { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        book = await BookService.GetByIdAsync(Id);
    }

    private async Task Update()
    {
        if (book is not null)
        {
            await BookService.UpdateAsync(book);
            NavigationManager.NavigateTo("/books");
        }
    }
}
